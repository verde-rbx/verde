name: Build CLI Release
on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-?*"

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build Artifact - ${{ matrix.os }}
    runs-on: ${{ matrix.machine }}
    if: success()
    strategy:
      matrix:
        include:
          - os: linux - x86_64
            machine: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: verde-linux-x86_64

          - os: windows - x86_64
            machine: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: verde-windows-x86_64

          - os: macos - aarch64
            machine: macos-latest
            target: aarch64-apple-darwin
            artifact: verde-macos-aarch64

          - os: macos - x86_64
            machine: macos-latest
            target: x86_64-apple-darwin
            artifact: verde-macos-x86_64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rust
        uses: moonrepo/setup-rust@v1
        with:
          cache-target: release
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --locked

      - name: Archive binary
        shell: bash
        run: |
          if [ "${{ matrix.machine }}" = "windows-latest" ]; then
            powershell -Command "Compress-Archive -Path target/release/verde.exe -DestinationPath ${{ matrix.artifact }}.zip"
          else
            zip -rj "${{ matrix.artifact }}.zip" "target/release/verde"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}.zip

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      pull-requests: read
    steps:
      # We need all history for changelog
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
          configurationJson: |
            {
              "template": "## üëâ Changelog\n#{{RELEASE_DIFF}}\n\n#{{CHANGELOG}}\n### ‚ù§Ô∏è Contributors\n#{{CONTRIBUTORS}}",
              "pr_template": "- #{{TITLE}} (##{{NUMBER}})",
              "categories": [
                {
                  "title": "## üöÄ Enhancements",
                  "labels": ["feat", "feature"]
                },
                {
                  "title": "### üî• Performance",
                  "labels": ["perf"]
                },
                {
                  "title": "### ü©π Fixes",
                  "labels": ["fix"]
                },
                {
                  "title": "### üíÖ Refactors",
                  "labels": ["refactor"]
                },
                {
                  "title": "### üìñ Documentation",
                  "labels": ["doc", "docs"]
                },
                {
                  "title": "### üè† Chore",
                  "labels": ["chore"]
                },
                {
                  "title": "### ü§ñ CI",
                  "labels": ["ci"]
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "target": "$1"
                }
              ]
            }

      - name: Download artifacts
        uses: actions/download-artifact@v4
        id: download
        with:
          pattern: verde-*
          merge-multiple: true

      - name: Create release
        uses: softprops/action-gh-release@v2
        if: ${{ steps.changelog.outputs.failed == 'false' }}
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          files: ${{ steps.download.outputs.download-path }}/verde*
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
